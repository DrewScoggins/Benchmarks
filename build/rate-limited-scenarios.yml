# Container Matrix scenarios

parameters:
- name: arguments
  type: string
  default: ''
- name: connection
  type: string
  default: ''
- name: condition
  type: string
  default: 'true'

# Rates
- name: rates
  type: object
  default: 

    - displayName: 20000
      arguments: --variable rate=10000 --property rate=10000 --load.job bombardier
    - displayName: unbound
      arguments: --property rate=0

# Scenarios
- name: scenarios 
  type: object
  default: 

  - displayName: Plaintext MVC
    arguments: --scenario mvc --property scenario=PlaintextMVC
    condition: Math.round(Date.now() / 43200000) % 4 == 0 # once every 4 half-days
  - displayName: Fortunes ASP.NET
    arguments: --scenario plaintext --property scenario=Plaintext
    condition: Math.round(Date.now() / 43200000) % 4 == 0 # once every 4 half-days
  
steps:
- ${{ each scenario in parameters.scenarios }}:
  - ${{ each size in parameters.sizes }}:
    - ${{ each rate in parameters.rates }}:
      - task: PublishToAzureServiceBus@1
        condition: succeededOrFailed()
        displayName: ${{ scenario.displayName }} ${{ size.displayName }} ${{ rate.displayName }} RPS
        inputs:
          connectedServiceName: ${{ parameters.connection }}
          waitForCompletion: true
          useDataContractSerializer: "false"
          messageBody: |
            {
              "name": "crank",
              "condition": "(${{ parameters.condition }}) && (${{ scenario.condition }})",
              "args": [ "--session $(session) $(containerMatrixJobs) ${{ scenario.arguments }} ${{ size.arguments }} ${{ rate.arguments }} ${{ parameters.arguments }} --no-metadata --no-measurements --load.options.reuseBuild true --command-line-property --table ConstrainedBenchmarks --sql SQL_CONNECTION_STRING --chart" ]
            }
            
